{"version":3,"file":"static/js/435.9b3aba16.chunk.js","mappings":"2QACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA8E,sBAA9E,EAA+G,uBAA/G,EAAsJ,4B,SCyDtJ,EAhDa,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAaC,EAanB,OAXAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,IACXI,EAAAA,EAAAA,IAAaV,GAASW,KAAKP,GACtBQ,OAAM,WACHC,EAAAA,GAAAA,MAAY,QAAS,CACjBC,MAAO,WAEd,IACAC,SAAQ,kBAAMT,GAAW,EAAjB,GAChB,GAAE,CAACN,IAEAK,GACO,SAACW,EAAA,EAAD,IAGW,IAAlBb,EAAOc,QACA,SAACC,EAAA,QAAD,KAIP,0BACI,eAAIC,UAAWC,EAAf,SACKjB,EAAOkB,KAAKJ,OAAS,GAClBd,EAAOkB,KAAKC,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACvD,OACI,gBAAaR,UAAWC,EAAxB,WACI,gBACIQ,IAAsB,OAAjBD,EAAwBpB,EAAxB,yCAAuEoB,GAC5EE,IAAKJ,EACLN,UAAWC,KAEf,cAAGD,UAAWC,EAAd,SAA6BK,IAC5BC,IAAkBD,IAAS,cAAGN,UAAWC,EAAd,SAA6BM,KACzD,eAAGP,UAAWC,EAAd,gBAAqCG,OARhCC,EAWhB,OAIhB,C,kFCvDD,EAAsB,sBAAtB,EAAkD,sBAAlD,EAA+E,uB,SCW/E,EATiB,WACb,OACI,iBAAKL,UAAWC,EAAhB,WACI,gBAAKQ,IAAKpB,EAAOqB,IAAI,YAAYV,UAAWC,KAC5C,cAAGD,UAAWC,EAAd,4CAGX,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/Cast/Cast.module.css?6aba","components/MoviesList/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/NotFound/NotFound.module.css?3aa0","components/NotFound/NotFound.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__4RSdy\",\"item\":\"Cast_item__mjpe0\",\"itemImg\":\"Cast_itemImg__qk4BW\",\"itemName\":\"Cast_itemName__JBJB+\",\"itemCharacter\":\"Cast_itemCharacter__hoCT0\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {getMovieCast} from \"service/movies.service\";\nimport { toast } from 'react-toastify';\nimport Spinner from 'components/Spinner/Spinner';\nimport NotFound from 'components/NotFound/NotFound';\nimport image from '../../../images/actor-logo.png';\nimport css from './Cast.module.css';\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const defaultImg = image;\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieCast(movieId).then(setActors)\n            .catch(() => {\n                toast.error('Oops ', {\n                    theme: \"colored\",\n                });\n            })\n            .finally(() => setLoading(false));\n    }, [movieId])\n\n    if (loading) {\n        return <Spinner/>\n    }\n    \n    if (actors.length === 0) {\n        return <NotFound/>\n    }\n\n    return (\n        <div>\n            <ul className={css.list}>\n                {actors.cast.length > 0 &&\n                    actors.cast.map(({ character, id, name, original_name, profile_path }) => {\n                    return (\n                        <li key={id} className={css.item}>\n                            <img\n                                src={profile_path === null ? defaultImg : `https://image.tmdb.org/t/p/w500${profile_path}`} \n                                alt={name}\n                                className={css.itemImg}\n                            />\n                            <p className={css.itemName}>{name}</p>\n                            {original_name !== name && (<p className={css.itemName}>{original_name}</p>)}\n                            <p className={css.itemCharacter}>as {character}</p>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"NotFound_box__DiuDZ\",\"img\":\"NotFound_img__IethY\",\"text\":\"NotFound_text__OfBlj\"};","import image from '../../images/i-dont-know-compilation-dont-know.gif';\nimport css from './NotFound.module.css';\n\nconst NotFound = () => {\n    return(\n        <div className={css.box}>\n            <img src={image} alt=\"not found\" className={css.img} />\n            <p className={css.text}>:( We coudnot find any movie</p>\n        </div>\n    )\n}\n\nexport default NotFound;"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","defaultImg","image","useEffect","getMovieCast","then","catch","toast","theme","finally","Spinner","length","NotFound","className","css","cast","map","character","id","name","original_name","profile_path","src","alt"],"sourceRoot":""}